Alright. Now the main dish. Making a function that determines correctness of parenthesis of something attempting to be a logical formula. Lets assume the user only knows parenthesis, logical propositions, and , or and implication. Oh! and not. Lets make a function to check if the parenthesis of something written with that is a correct formula.

No! Ok! just with the approach I was initially gonna use... Its literally impossible to do it because... the functions I planned to implement ALL used things that are ALREADY formulas as arguments... so... I was essentially gonna make a machine that take a thing in a set and tells us that that thing belongs to said set. its logically trivial.


*Sigh...* We gotta use a  grammar. And implement some kind of stack object, stack related functions, strings of characters... and one of the functions will have to be a dequeue... but we will do it! But let me think... *speaking to self* Ok... a stack. Thats sorta easy with only 1 side of the string, as we can, inductively, invent something that just pops stuff to one side and makes it grow iteratively. I mean... we could use something similar to bin trees... but with strings... So we start with an empty one... and a string with something appended to the left is a string. and the same string with something appended to the right is also a string.YES! Ok... we are gonna use these strings as our main datatype. logical formulas are basically gonna be strings. Ohhh! But then we have to check if the parenthesis are in the right places too! you dont want a parenthesis between a symbol and an operator... *speaks to you* what do you think?


Yes! basically... we do bottom up! We start with... ohhh... yeah... but which one... Ok so we have to start from the top. We have no choice. Ohhh!!!! Ok. I have a mechanism. Remember those stacks? As we move across the string, we pile up parenthesis. And if we find a... I mean... stacks... strings... yeah... we are basically making a context driven grammar... But any grammar is 100% capable of this. But the objective was studying computer logic... Im already way too up in the clouds now... I guess this homework is way too out of subject

Ok! I have an idea! We can, first, turn a formula into a string! We can do stuff like excluding anything that is, either, a not operator character or a propositional... no... Oh! No! We can take something that *tries* to be a formula, and exclude not operators and propositional symbols. Because the parenthesis are only there because of the binary operators anyway. simplifies stuff. Because I think we have to be a bit cheeky: we have to change *correct* parenthesis to *balanced* parenthesis*

ok! I have another thing! While we are converting, we can use two stacks: one for the simplification process. the other for the other thing! in the first stack, we have the following algorithm: We keep track of every simbol in the stack. What we do is: just nuke all the not symbols. finish stacking some random symbol. then stack the next: if its a parenthesis, stack the next one. if both symbols sandwiching the parenthesis are either: two propositional ones, or two binary operator ones, kill it. We have an incorrect parenthesis situation. if its a not symbol and a propositional one, we can only figure it out on step 2 so leave it be. If they are two not symbols.... OHHH! Wait! Omg... I think its not worth the effort... We have to check, somehow, if the parenthesis has the expected orientation too. Omg its too much work... I honestly think this is too much for homework no?

Idk lets try a different homework.

What about... I just dont know! I just dont!

Is it bad if the assignment, right now, outta the blue, is completly paper free? Because I have some paper free subjects


Ok... you know something? I think I sorta did the 2nd homework without realizing. I got too caught up in making it conventional, suprisingly. Because I got fixated on the idea that I had to achieve something... when thats not how I am wired at all

Because think about it! I figured out it is impossible to check if a formula has correct parenthesis using the axioms of propositional logic themselves. We would have to step up in complexity. Which is out of the scope of my computer logic subject. Which is valuable in itself.

Please please please! While I am booting up my laptop's linux partition (Where I make my programs), can I play some music?


And Im gonna make a confession: Im kinda bitter and angry about the school system. Imagine having to be your own tutor.









